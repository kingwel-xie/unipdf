//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package license ;import (_f "bytes";_a "compress/gzip";_b "crypto";_fd "crypto/aes";_cfg "crypto/cipher";_ec "crypto/rand";_dg "crypto/rsa";_ece "crypto/sha512";_cab "crypto/x509";_efg "encoding/base64";_bg "encoding/hex";_fe "encoding/json";_fb "encoding/pem";
_gfb "errors";_da "fmt";_eg "github.com/unidoc/unipdf/v3/common";_ca "io";_bd "io/ioutil";_ef "net";_d "net/http";_gf "os";_ad "path/filepath";_e "sort";_efb "strings";_g "sync";_cf "time";);var _cd =_cf .Date (2019,6,6,0,0,0,0,_cf .UTC );func _cb ()*meteredClient {_ba :=meteredClient {_egg :"h\u0074\u0074\u0070\u0073\u003a\u002f/\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069d\u006f\u0063\u002ei\u006f/\u0061\u0070\u0069",_ac :&_d .Client {Timeout :30*_cf .Second }};
if _ggf :=_gf .Getenv ("\u0055N\u0049\u0044\u004f\u0043_\u004c\u0049\u0043\u0045\u004eS\u0045_\u0053E\u0052\u0056\u0045\u0052\u005f\u0055\u0052L");_efb .HasPrefix (_ggf ,"\u0068\u0074\u0074\u0070"){_ba ._egg =_ggf ;};return &_ba ;};func _gecb (_egb []byte )(_ca .Reader ,error ){_fee :=new (_f .Buffer );
_dbec :=_a .NewWriter (_fee );_dbec .Write (_egb );_ede :=_dbec .Close ();if _ede !=nil {return nil ,_ede ;};return _fee ,nil ;};func (_caa *LicenseKey )isExpired ()bool {return _caa .getExpiryDateToCompare ().After (*_caa .ExpiresAt )};func _bfb (_gade string ,_beb string ,_gdd bool )error {if _gec ==nil {return _gfb .New ("\u006e\u006f\u0020\u006c\u0069\u0063\u0065\u006e\u0073e\u0020\u006b\u0065\u0079");
};if !_gec ._dee ||len (_gec ._bda )==0{return nil ;};if len (_gade )==0&&!_gdd {return _gfb .New ("\u0064\u006f\u0063\u004b\u0065\u0079\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};_ecgd .Lock ();defer _ecgd .Unlock ();if _cbg ==nil {_cbg =map[string ]struct{}{};
};if _fcec ==nil {_fcec =map[string ]int {};};_cfgb :=0;if !_gdd {_ ,_ddd :=_cbg [_gade ];if !_ddd {_cbg [_gade ]=struct{}{};_cfgb ++;};if _cfgb ==0{return nil ;};_fcec [_beb ]++;};_fcf :=_cf .Now ();_ceg ,_ebf :=_cea .loadState (_gec ._bda );if _ebf !=nil {_eg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ebf );
return _ebf ;};if _ceg .Usage ==nil {_ceg .Usage =map[string ]int {};};for _cdb ,_fbcc :=range _fcec {_ceg .Usage [_cdb ]+=_fbcc ;};_fcec =nil ;const _fcb =24*_cf .Hour ;const _cbd =3*24*_cf .Hour ;if len (_ceg .Instance )==0||_fcf .Sub (_ceg .LastReported )> _fcb ||(_ceg .LimitDocs &&_ceg .RemainingDocs <=_ceg .Docs +int64 (_cfgb ))||_gdd {_cegc ,_afe :=_gf .Hostname ();
if _afe !=nil {return _afe ;};_bbab :=_ceg .Docs ;_ege ,_efe ,_afe :=_ace ();if _afe !=nil {return _afe ;};_e .Strings (_efe );_e .Strings (_ege );_gdea ,_afe :=_fcga ();if _afe !=nil {return _afe ;};_fdb :=false ;for _ ,_fbab :=range _efe {if _fbab ==_gdea .String (){_fdb =true ;
};};if !_fdb {_efe =append (_efe ,_gdea .String ());};_age :=_cb ();_age ._ff =_gec ._bda ;_bbab +=int64 (_cfgb );_bab :=meteredUsageCheckinForm {Instance :_ceg .Instance ,Next :_ceg .Next ,UsageNumber :int (_bbab ),NumFailed :_ceg .NumErrors ,Hostname :_cegc ,LocalIP :_efb .Join (_efe ,"\u002c\u0020"),MacAddress :_efb .Join (_ege ,"\u002c\u0020"),Package :"\u0075\u006e\u0069\u0070\u0064\u0066",PackageVersion :_eg .Version ,Usage :_ceg .Usage };
if len (_ege )==0{_bab .MacAddress ="\u006e\u006f\u006e\u0065";};_cba :=int64 (0);_aad :=_ceg .NumErrors ;_bgf :=_fcf ;_ccb :=0;_ega :=_ceg .LimitDocs ;_fab ,_afe :=_age .checkinUsage (_bab );if _afe !=nil {if _fcf .Sub (_ceg .LastReported )> _cbd {return _gfb .New ("\u0074\u006f\u006f\u0020\u006c\u006f\u006e\u0067\u0020\u0073\u0069\u006e\u0063\u0065\u0020\u006c\u0061\u0073\u0074\u0020\u0073\u0075\u0063\u0063e\u0073\u0073\u0066\u0075\u006c \u0063\u0068e\u0063\u006b\u0069\u006e");
};_cba =_bbab ;_aad ++;_bgf =_ceg .LastReported ;}else {_ega =_fab .LimitDocs ;_ccb =_fab .RemainingDocs ;_aad =0;};if len (_fab .Instance )==0{_fab .Instance =_bab .Instance ;};if len (_fab .Next )==0{_fab .Next =_bab .Next ;};_afe =_cea .updateState (_age ._ff ,_fab .Instance ,_fab .Next ,int (_cba ),_ega ,_ccb ,int (_aad ),_bgf ,nil );
if _afe !=nil {return _afe ;};if !_fab .Success {return _da .Errorf ("\u0065r\u0072\u006f\u0072\u003a\u0020\u0025s",_fab .Message );};}else {_ebf =_cea .updateState (_gec ._bda ,_ceg .Instance ,_ceg .Next ,int (_ceg .Docs )+_cfgb ,_ceg .LimitDocs ,int (_ceg .RemainingDocs ),int (_ceg .NumErrors ),_ceg .LastReported ,_ceg .Usage );
if _ebf !=nil {return _ebf ;};};return nil ;};func _afg (_dgfc ,_gddd []byte )([]byte ,error ){_caf :=make ([]byte ,_efg .URLEncoding .DecodedLen (len (_gddd )));_adef ,_baff :=_efg .URLEncoding .Decode (_caf ,_gddd );if _baff !=nil {return nil ,_baff ;
};_caf =_caf [:_adef ];_dec ,_baff :=_fd .NewCipher (_dgfc );if _baff !=nil {return nil ,_baff ;};if len (_caf )< _fd .BlockSize {return nil ,_gfb .New ("c\u0069p\u0068\u0065\u0072\u0074\u0065\u0078\u0074\u0020t\u006f\u006f\u0020\u0073ho\u0072\u0074");
};_daa :=_caf [:_fd .BlockSize ];_caf =_caf [_fd .BlockSize :];_gbbd :=_cfg .NewCFBDecrypter (_dec ,_daa );_gbbd .XORKeyStream (_caf ,_caf );return _caf ,nil ;};func _gad (_df string ,_fed string ,_bfd string )(string ,error ){_febc :=_efb .Index (_bfd ,_df );
if _febc ==-1{return "",_da .Errorf ("\u0068\u0065a\u0064\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_bc :=_efb .Index (_bfd ,_fed );if _bc ==-1{return "",_da .Errorf ("\u0066\u006fo\u0074\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_dag :=_febc +len (_df )+1;return _bfd [_dag :_bc -1],nil ;};func TrackUse (useKey string ){if _gec ==nil {return ;};if !_gec ._dee ||len (_gec ._bda )==0{return ;};if len (useKey )==0{return ;};_ecgd .Lock ();defer _ecgd .Unlock ();if _fcec ==nil {_fcec =map[string ]int {};
};_fcec [useKey ]++;};func _dbb (_bga string )(LicenseKey ,error ){var _gd LicenseKey ;_gag ,_dae :=_gad (_be ,_db ,_bga );if _dae !=nil {return _gd ,_dae ;};_bdg ,_dae :=_faa (_bbg ,_gag );if _dae !=nil {return _gd ,_dae ;};_dae =_fe .Unmarshal (_bdg ,&_gd );
if _dae !=nil {return _gd ,_dae ;};_gd .CreatedAt =_cf .Unix (_gd .CreatedAtInt ,0);if _gd .ExpiresAtInt > 0{_fae :=_cf .Unix (_gd .ExpiresAtInt ,0);_gd .ExpiresAt =&_fae ;};return _gd ,nil ;};var _gg =_cf .Date (2020,1,1,0,0,0,0,_cf .UTC );func (_ggb *LicenseKey )IsLicensed ()bool {return true ||_ggb ._dee };
type reportState struct{Instance string `json:"inst"`;Next string `json:"n"`;Docs int64 `json:"d"`;NumErrors int64 `json:"e"`;LimitDocs bool `json:"ld"`;RemainingDocs int64 `json:"rd"`;LastReported _cf .Time `json:"lr"`;LastWritten _cf .Time `json:"lw"`;
Usage map[string ]int `json:"u"`;};type meteredStatusResp struct{Valid bool `json:"valid"`;OrgCredits int64 `json:"org_credits"`;OrgUsed int64 `json:"org_used"`;OrgRemaining int64 `json:"org_remaining"`;};const (LicenseTierUnlicensed ="\u0075\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
LicenseTierCommunity ="\u0063o\u006d\u006d\u0075\u006e\u0069\u0074y";LicenseTierIndividual ="\u0069\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";LicenseTierBusiness ="\u0062\u0075\u0073\u0069\u006e\u0065\u0073\u0073";);const _bdff ="U\u004eI\u0050\u0044\u0046\u005f\u0043\u0055\u0053\u0054O\u004d\u0045\u0052\u005fNA\u004d\u0045";
func GetLicenseKey ()*LicenseKey {if _gec ==nil {return nil ;};_dagef :=*_gec ;return &_dagef ;};func GetMeteredState ()(MeteredStatus ,error ){if _gec ==nil {return MeteredStatus {},_gfb .New ("\u006c\u0069\u0063\u0065ns\u0065\u0020\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};if !_gec ._dee ||len (_gec ._bda )==0{return MeteredStatus {},_gfb .New ("\u0061p\u0069 \u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_dcg ,_efa :=_cea .loadState (_gec ._bda );if _efa !=nil {_eg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_efa );
return MeteredStatus {},_efa ;};if _dcg .Docs > 0{_cfa :=_bfb ("","",true );if _cfa !=nil {return MeteredStatus {},_cfa ;};};_ecgd .Lock ();defer _ecgd .Unlock ();_baa :=_cb ();_baa ._ff =_gec ._bda ;_fdc ,_efa :=_baa .getStatus ();if _efa !=nil {return MeteredStatus {},_efa ;
};if !_fdc .Valid {return MeteredStatus {},_gfb .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");};_gee :=MeteredStatus {OK :true ,Credits :_fdc .OrgCredits ,Used :_fdc .OrgUsed };return _gee ,nil ;};func SetMeteredKey (apiKey string )error {if len (apiKey )==0{_eg .Log .Error ("\u004d\u0065\u0074\u0065\u0072e\u0064\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0041\u0050\u0049 \u004b\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079");
_eg .Log .Error ("\u002d\u0020\u0047\u0072\u0061\u0062\u0020\u006f\u006e\u0065\u0020\u0069\u006e\u0020\u0074h\u0065\u0020\u0046\u0072\u0065\u0065\u0020\u0054\u0069\u0065\u0072\u0020\u0061t\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063\u006c\u006fud\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _da .Errorf ("\u006de\u0074\u0065\u0072e\u0064\u0020\u006ci\u0063en\u0073\u0065\u0020\u0061\u0070\u0069\u0020k\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079\u003a\u0020\u0063\u0072\u0065\u0061\u0074\u0065 o\u006ee\u0020\u0061\u0074\u0020\u0068\u0074t\u0070\u0073\u003a\u002f\u002fc\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063.\u0069\u006f");
};if _gec !=nil &&(_gec ._dee ||_gec .Tier !=LicenseTierUnlicensed ){_eg .Log .Error ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0043\u0061\u006e\u006eo\u0074 \u0073\u0065\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0074\u0077\u0069c\u0065\u0020\u002d\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u006a\u0075\u0073\u0074\u0020\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0069z\u0065\u0020\u006f\u006e\u0063\u0065");
return _gfb .New ("\u006c\u0069\u0063en\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0061\u006c\u0072\u0065\u0061\u0064\u0079\u0020\u0073\u0065\u0074");};_eb :=_cb ();_eb ._ff =apiKey ;_aeb ,_edd :=_eb .getStatus ();if _edd !=nil {return _edd ;};if !_aeb .Valid {return _gfb .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");
};_eag :=&LicenseKey {_dee :true ,_bda :apiKey };_gec =_eag ;return nil ;};func MakeUnlicensedKey ()*LicenseKey {_abf :=LicenseKey {};_abf .CustomerName ="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";_abf .Tier =LicenseTierUnlicensed ;
_abf .CreatedAt =_cf .Now ().UTC ();_abf .CreatedAtInt =_abf .CreatedAt .Unix ();return &_abf ;};func _ace ()([]string ,[]string ,error ){_ecgf ,_gfe :=_ef .Interfaces ();if _gfe !=nil {return nil ,nil ,_gfe ;};var _ffc []string ;var _gbb []string ;for _ ,_add :=range _ecgf {if _add .Flags &_ef .FlagUp ==0||_f .Equal (_add .HardwareAddr ,nil ){continue ;
};_agfg ,_fef :=_add .Addrs ();if _fef !=nil {return nil ,nil ,_fef ;};_gfde :=0;for _ ,_eaa :=range _agfg {var _ggg _ef .IP ;switch _aea :=_eaa .(type ){case *_ef .IPNet :_ggg =_aea .IP ;case *_ef .IPAddr :_ggg =_aea .IP ;};if _ggg .IsLoopback (){continue ;
};if _ggg .To4 ()==nil {continue ;};_gbb =append (_gbb ,_ggg .String ());_gfde ++;};_aeaf :=_add .HardwareAddr .String ();if _aeaf !=""&&_gfde > 0{_ffc =append (_ffc ,_aeaf );};};return _ffc ,_gbb ,nil ;};func _bf (_fa string ,_ed []byte )(string ,error ){_gff ,_ :=_fb .Decode ([]byte (_fa ));
if _gff ==nil {return "",_da .Errorf ("\u0050\u0072\u0069\u0076\u004b\u0065\u0079\u0020\u0066a\u0069\u006c\u0065\u0064");};_feb ,_ea :=_cab .ParsePKCS1PrivateKey (_gff .Bytes );if _ea !=nil {return "",_ea ;};_de :=_ece .New ();_de .Write (_ed );_fg :=_de .Sum (nil );
_ce ,_ea :=_dg .SignPKCS1v15 (_ec .Reader ,_feb ,_b .SHA512 ,_fg );if _ea !=nil {return "",_ea ;};_dea :=_efg .StdEncoding .EncodeToString (_ed );_dea +="\u000a\u002b\u000a";_dea +=_efg .StdEncoding .EncodeToString (_ce );return _dea ,nil ;};var _ecgd =&_g .Mutex {};
func (_bgag defaultStateHolder )loadState (_eff string )(reportState ,error ){_bed :=_cebb ();if len (_bed )==0{return reportState {},_gfb .New ("\u0068\u006fm\u0065\u0020\u0064i\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_bgb :=_ad .Join (_bed ,"\u002eu\u006e\u0069\u0064\u006f\u0063");
_ecg :=_gf .MkdirAll (_bgb ,0777);if _ecg !=nil {return reportState {},_ecg ;};if len (_eff )< 20{return reportState {},_gfb .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_fgd :=[]byte (_eff );_fcd :=_ece .Sum512_256 (_fgd [:20]);
_edbg :=_bg .EncodeToString (_fcd [:]);_bba :=_ad .Join (_bgb ,_edbg );_fde ,_ecg :=_bd .ReadFile (_bba );if _ecg !=nil {if _gf .IsNotExist (_ecg ){return reportState {},nil ;};_eg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ecg );return reportState {},_gfb .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");
};const _fdga ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_fde ,_ecg =_afg ([]byte (_fdga ),_fde );if _ecg !=nil {return reportState {},_ecg ;};var _bbf reportState ;_ecg =_fe .Unmarshal (_fde ,&_bbf );if _ecg !=nil {_eg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0076",_ecg );
return reportState {},_gfb .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");};return _bbf ,nil ;};type meteredUsageCheckinResp struct{Instance string `json:"inst"`;Next string `json:"next"`;Success bool `json:"success"`;Message string `json:"message"`;
RemainingDocs int `json:"rd"`;LimitDocs bool `json:"ld"`;};type meteredUsageCheckinForm struct{Instance string `json:"inst"`;Next string `json:"next"`;UsageNumber int `json:"usage_number"`;NumFailed int64 `json:"num_failed"`;Hostname string `json:"hostname"`;
LocalIP string `json:"local_ip"`;MacAddress string `json:"mac_address"`;Package string `json:"package"`;PackageVersion string `json:"package_version"`;Usage map[string ]int `json:"u"`;};func _cebb ()string {_bbb :=_gf .Getenv ("\u0048\u004f\u004d\u0045");
if len (_bbb )==0{_bbb ,_ =_gf .UserHomeDir ();};return _bbb ;};func (_dc *LicenseKey )ToString ()string {if _dc ._dee {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";};_dbg :=_da .Sprintf ("\u004ci\u0063e\u006e\u0073\u0065\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_dc .LicenseId );
_dbg +=_da .Sprintf ("\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_dc .CustomerId );_dbg +=_da .Sprintf ("\u0043u\u0073t\u006f\u006d\u0065\u0072\u0020N\u0061\u006de\u003a\u0020\u0025\u0073\u000a",_dc .CustomerName );
_dbg +=_da .Sprintf ("\u0054i\u0065\u0072\u003a\u0020\u0025\u0073\n",_dc .Tier );_dbg +=_da .Sprintf ("\u0043r\u0065a\u0074\u0065\u0064\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_eg .UtcTimeFormat (_dc .CreatedAt ));if _dc .ExpiresAt ==nil {_dbg +="\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041t\u003a\u0020N\u0065\u0076\u0065\u0072\u000a";
}else {_dbg +=_da .Sprintf ("\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_eg .UtcTimeFormat (*_dc .ExpiresAt ));};_dbg +=_da .Sprintf ("\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u003a\u0020\u0025\u0073\u0020<\u0025\u0073\u003e\u000a",_dc .CreatorName ,_dc .CreatorEmail );
return _dbg ;};type stateLoader interface{loadState (_cfab string )(reportState ,error );updateState (_gadc ,_ged ,_aga string ,_ddc int ,_caae bool ,_eef int ,_fce int ,_cfed _cf .Time ,_efc map[string ]int )error ;};func (_ae *LicenseKey )getExpiryDateToCompare ()_cf .Time {if _ae .Trial {return _cf .Now ().UTC ();
};return _eg .ReleasedAt ;};type meteredClient struct{_egg string ;_ff string ;_ac *_d .Client ;};type defaultStateHolder struct{};func _edbf (_bafd *_d .Response )([]byte ,error ){var _fbbc []byte ;_ffcb ,_edde :=_dac (_bafd );if _edde !=nil {return _fbbc ,_edde ;
};return _bd .ReadAll (_ffcb );};var _cea stateLoader =defaultStateHolder {};func (_eddd defaultStateHolder )updateState (_fdca ,_dfa ,_dcgf string ,_cc int ,_eaf bool ,_ade int ,_bae int ,_bcb _cf .Time ,_bfda map[string ]int )error {_eca :=_cebb ();if len (_eca )==0{return _gfb .New ("\u0068\u006fm\u0065\u0020\u0064i\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};_fba :=_ad .Join (_eca ,"\u002eu\u006e\u0069\u0064\u006f\u0063");_cac :=_gf .MkdirAll (_fba ,0777);if _cac !=nil {return _cac ;};if len (_fdca )< 20{return _gfb .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_fdg :=[]byte (_fdca );
_cg :=_ece .Sum512_256 (_fdg [:20]);_dgg :=_bg .EncodeToString (_cg [:]);_gab :=_ad .Join (_fba ,_dgg );var _fbb reportState ;_fbb .Docs =int64 (_cc );_fbb .NumErrors =int64 (_bae );_fbb .LimitDocs =_eaf ;_fbb .RemainingDocs =int64 (_ade );_fbb .LastWritten =_cf .Now ().UTC ();
_fbb .LastReported =_bcb ;_fbb .Instance =_dfa ;_fbb .Next =_dcgf ;_fbb .Usage =_bfda ;_dgd ,_cac :=_fe .Marshal (_fbb );if _cac !=nil {return _cac ;};const _defb ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";
_dgd ,_cac =_aef ([]byte (_defb ),_dgd );if _cac !=nil {return _cac ;};_cac =_bd .WriteFile (_gab ,_dgd ,0600);if _cac !=nil {return _cac ;};return nil ;};func (_ddg *meteredClient )checkinUsage (_edb meteredUsageCheckinForm )(meteredUsageCheckinResp ,error ){_edb .Package ="\u0075\u006e\u0069\u0070\u0064\u0066";
_edb .PackageVersion =_eg .Version ;var _dbea meteredUsageCheckinResp ;_af :=_ddg ._egg +"\u002f\u006d\u0065\u0074er\u0065\u0064\u002f\u0075\u0073\u0061\u0067\u0065\u005f\u0063\u0068\u0065\u0063\u006bi\u006e";_fcg ,_abc :=_fe .Marshal (_edb );if _abc !=nil {return _dbea ,_abc ;
};_aa ,_abc :=_gecb (_fcg );if _abc !=nil {return _dbea ,_abc ;};_bgc ,_abc :=_d .NewRequest ("\u0050\u004f\u0053\u0054",_af ,_aa );if _abc !=nil {return _dbea ,_abc ;};_bgc .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_bgc .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_bgc .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_bgc .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_ddg ._ff );_aaa ,_abc :=_ddg ._ac .Do (_bgc );if _abc !=nil {return _dbea ,_abc ;};defer _aaa .Body .Close ();if _aaa .StatusCode !=200{return _dbea ,_da .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_aaa .StatusCode );
};_def ,_abc :=_edbf (_aaa );if _abc !=nil {return _dbea ,_abc ;};_abc =_fe .Unmarshal (_def ,&_dbea );if _abc !=nil {return _dbea ,_abc ;};return _dbea ,nil ;};type MeteredStatus struct{OK bool ;Credits int64 ;Used int64 ;};func _faa (_gb string ,_deb string )([]byte ,error ){var (_efgc int ;
_feg string ;);for _ ,_feg =range []string {"\u000a\u002b\u000a","\u000d\u000a\u002b\r\u000a","\u0020\u002b\u0020"}{if _efgc =_efb .Index (_deb ,_feg );_efgc !=-1{break ;};};if _efgc ==-1{return nil ,_da .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u002c \u0073i\u0067n\u0061t\u0075\u0072\u0065\u0020\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u006f\u0072");
};_fad :=_deb [:_efgc ];_ee :=_efgc +len (_feg );_dbe :=_deb [_ee :];if _fad ==""||_dbe ==""{return nil ,_da .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u0069n\u0070\u0075\u0074,\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0069\u0067\u0069n\u0061\u006c \u006f\u0072\u0020\u0073\u0069\u0067n\u0061\u0074u\u0072\u0065");
};_fc ,_ga :=_efg .StdEncoding .DecodeString (_fad );if _ga !=nil {return nil ,_da .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u006f\u0072\u0069\u0067\u0069\u006ea\u006c");};_ag ,_ga :=_efg .StdEncoding .DecodeString (_dbe );
if _ga !=nil {return nil ,_da .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065");};_agf ,_ :=_fb .Decode ([]byte (_gb ));if _agf ==nil {return nil ,_da .Errorf ("\u0050\u0075\u0062\u004b\u0065\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_ab ,_ga :=_cab .ParsePKIXPublicKey (_agf .Bytes );if _ga !=nil {return nil ,_ga ;};_eae :=_ab .(*_dg .PublicKey );if _eae ==nil {return nil ,_da .Errorf ("\u0050u\u0062\u004b\u0065\u0079\u0020\u0063\u006f\u006e\u0076\u0065\u0072s\u0069\u006f\u006e\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_gc :=_ece .New ();_gc .Write (_fc );_bfe :=_gc .Sum (nil );_ga =_dg .VerifyPKCS1v15 (_eae ,_b .SHA512 ,_bfe ,_ag );if _ga !=nil {return nil ,_ga ;};return _fc ,nil ;};const (_be ="\u002d\u002d\u002d--\u0042\u0045\u0047\u0049\u004e\u0020\u0055\u004e\u0049D\u004fC\u0020L\u0049C\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";
_db ="\u002d\u002d\u002d\u002d\u002d\u0045\u004e\u0044\u0020\u0055\u004e\u0049\u0044\u004f\u0043 \u004cI\u0043\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";);func (_dff *LicenseKey )Validate ()error {if _dff ._dee {return nil ;
};if len (_dff .LicenseId )< 10{return _da .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020L\u0069\u0063\u0065n\u0073e\u0020\u0049\u0064");};if len (_dff .CustomerId )< 10{return _da .Errorf ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020C\u0075\u0073\u0074\u006f\u006d\u0065\u0072 \u0049\u0064");
};if len (_dff .CustomerName )< 1{return _da .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043u\u0073\u0074\u006f\u006d\u0065\u0072\u0020\u004e\u0061\u006d\u0065");};if _cfe .After (_dff .CreatedAt ){return _da .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064 \u0041\u0074\u0020\u0069\u0073 \u0069\u006ev\u0061\u006c\u0069\u0064");
};if _dff .ExpiresAt ==nil {_dge :=_dff .CreatedAt .AddDate (1,0,0);if _gg .After (_dge ){_dge =_gg ;};_dff .ExpiresAt =&_dge ;};if _dff .CreatedAt .After (*_dff .ExpiresAt ){return _da .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064\u0020\u0041\u0074 \u0063a\u006e\u006e\u006f\u0074 \u0062\u0065 \u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0045\u0078\u0070\u0069\u0072\u0065\u0073\u0020\u0041\u0074");
};if _dff .isExpired (){return _da .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020l\u0069\u0063\u0065ns\u0065\u003a\u0020\u0054\u0068\u0065 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0068\u0061\u0073\u0020\u0061\u006c\u0072e\u0061\u0064\u0079\u0020\u0065\u0078\u0070\u0069r\u0065\u0064");
};if len (_dff .CreatorName )< 1{return _da .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020na\u006d\u0065");};if len (_dff .CreatorEmail )< 1{return _da .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043r\u0065\u0061\u0074\u006f\u0072\u0020\u0065\u006d\u0061\u0069\u006c");
};if _dff .CreatedAt .After (_cd ){if !_dff .UniPDF {return _da .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020\u0054\u0068\u0069\u0073\u0020\u0055\u006e\u0069\u0044\u006f\u0063\u0020k\u0065\u0079\u0020\u0069\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d \u0066\u006f\u0072\u0020\u0055\u006e\u0069\u0050\u0044\u0046");
};};return nil ;};var _gec =MakeUnlicensedKey ();func _dac (_bgagc *_d .Response )(_ca .ReadCloser ,error ){var _dbd error ;var _cbc _ca .ReadCloser ;switch _efb .ToLower (_bgagc .Header .Get ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067")){case "\u0067\u007a\u0069\u0070":_cbc ,_dbd =_a .NewReader (_bgagc .Body );
if _dbd !=nil {return _cbc ,_dbd ;};defer _cbc .Close ();default:_cbc =_bgagc .Body ;};return _cbc ,nil ;};func _fcga ()(_ef .IP ,error ){_ecee ,_fdbf :=_ef .Dial ("\u0075\u0064\u0070","\u0038\u002e\u0038\u002e\u0038\u002e\u0038\u003a\u0038\u0030");if _fdbf !=nil {return nil ,_fdbf ;
};defer _ecee .Close ();_eba :=_ecee .LocalAddr ().(*_ef .UDPAddr );return _eba .IP ,nil ;};type meteredStatusForm struct{};var _cfe =_cf .Date (2010,1,1,0,0,0,0,_cf .UTC );func (_ge *meteredClient )getStatus ()(meteredStatusResp ,error ){var _egd meteredStatusResp ;
_dage :=_ge ._egg +"\u002fm\u0065t\u0065\u0072\u0065\u0064\u002f\u0073\u0074\u0061\u0074\u0075\u0073";var _bb meteredStatusForm ;_bdf ,_dgf :=_fe .Marshal (_bb );if _dgf !=nil {return _egd ,_dgf ;};_baf ,_dgf :=_gecb (_bdf );if _dgf !=nil {return _egd ,_dgf ;
};_fbc ,_dgf :=_d .NewRequest ("\u0050\u004f\u0053\u0054",_dage ,_baf );if _dgf !=nil {return _egd ,_dgf ;};_fbc .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_fbc .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_fbc .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_fbc .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_ge ._ff );_dba ,_dgf :=_ge ._ac .Do (_fbc );if _dgf !=nil {return _egd ,_dgf ;};defer _dba .Body .Close ();if _dba .StatusCode !=200{return _egd ,_da .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_dba .StatusCode );
};_acc ,_dgf :=_edbf (_dba );if _dgf !=nil {return _egd ,_dgf ;};_dgf =_fe .Unmarshal (_acc ,&_egd );if _dgf !=nil {return _egd ,_dgf ;};return _egd ,nil ;};var _cbg map[string ]struct{};const _bbg ="\u000a\u002d\u002d\u002d\u002d\u002d\u0042\u0045\u0047\u0049\u004e \u0050\u0055\u0042\u004c\u0049\u0043\u0020\u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\u000a\u004d\u0049I\u0042\u0049\u006a\u0041NB\u0067\u006b\u0071\u0068\u006b\u0069G\u0039\u0077\u0030\u0042\u0041\u0051\u0045\u0046A\u0041\u004f\u0043\u0041\u0051\u0038\u0041\u004d\u0049\u0049\u0042\u0043\u0067\u004b\u0043\u0041\u0051\u0045A\u006dF\u0055\u0069\u0079\u0064\u0037\u0062\u0035\u0058\u006a\u0070\u006b\u0050\u0035\u0052\u0061\u0070\u0034\u0077\u000a\u0044\u0063\u0031d\u0079\u007a\u0049\u0051\u0034\u004c\u0065\u006b\u0078\u0072\u0076\u0079\u0074\u006e\u0045\u004d\u0070\u004e\u0055\u0062\u006f\u0036i\u0041\u0037\u0034\u0056\u0038\u0072\u0075\u005a\u004f\u0076\u0072\u0053\u0063\u0073\u0066\u0032\u0051\u0065\u004e9\u002f\u0071r\u0055\u0047\u0038\u0071\u0045\u0062\u0055\u0057\u0064\u006f\u0045\u0059\u0071+\u000a\u006f\u0074\u0046\u004e\u0041\u0046N\u0078\u006c\u0047\u0062\u0078\u0062\u0044\u0048\u0063\u0064\u0047\u0056\u0061\u004d\u0030\u004f\u0058\u0064\u0058g\u0044y\u004c5\u0061\u0049\u0045\u0061\u0067\u004c\u0030\u0063\u0035\u0070\u0077\u006a\u0049\u0064\u0050G\u0049\u006e\u0034\u0036\u0066\u0037\u0038\u0065\u004d\u004a\u002b\u004a\u006b\u0064\u0063\u0070\u0044\n\u0044\u004a\u0061\u0071\u0059\u0058d\u0072\u007a5\u004b\u0065\u0073\u0068\u006aS\u0069\u0049\u0061\u0061\u0037\u006d\u0065\u006e\u0042\u0049\u0041\u0058\u0053\u0034\u0055\u0046\u0078N\u0066H\u0068\u004e\u0030\u0048\u0043\u0059\u005a\u0059\u0071\u0051\u0047\u0037\u0062K+\u0073\u0035\u0072R\u0048\u006f\u006e\u0079\u0064\u004eW\u0045\u0047\u000a\u0048\u0038M\u0079\u0076\u00722\u0070\u0079\u0061\u0032K\u0072\u004d\u0075m\u0066\u006d\u0041\u0078\u0055\u0042\u0036\u0066\u0065\u006e\u0043\u002f4\u004f\u0030\u0057\u00728\u0067\u0066\u0050\u004f\u0055\u0038R\u0069\u0074\u006d\u0062\u0044\u0076\u0051\u0050\u0049\u0052\u0058\u004fL\u0034\u0076\u0054B\u0072\u0042\u0064\u0062a\u0041\u000a9\u006e\u0077\u004e\u0050\u002b\u0069\u002f\u002f\u0032\u0030\u004d\u00542\u0062\u0078\u006d\u0065\u0057\u0042\u002b\u0067\u0070\u0063\u0045\u0068G\u0070\u0058\u005a7\u0033\u0033\u0061\u007a\u0051\u0078\u0072\u0043\u0033\u004a\u0034\u0076\u0033C\u005a\u006d\u0045\u004eS\u0074\u0044\u004b\u002f\u004b\u0044\u0053\u0050\u004b\u0055\u0047\u0066\u00756\u000a\u0066\u0077I\u0044\u0041\u0051\u0041\u0042\u000a\u002d\u002d\u002d\u002d\u002dE\u004e\u0044\u0020\u0050\u0055\u0042\u004c\u0049\u0043 \u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\n";
func init (){_ebe :=_gf .Getenv (_gfff );_fdf :=_gf .Getenv (_bdff );if len (_ebe )==0||len (_fdf )==0{return ;};_bde ,_gfeb :=_bd .ReadFile (_ebe );if _gfeb !=nil {_eg .Log .Error ("\u0055\u006eab\u006c\u0065\u0020t\u006f\u0020\u0072\u0065ad \u006cic\u0065\u006e\u0073\u0065\u0020\u0063\u006fde\u0020\u0066\u0069\u006c\u0065\u003a\u0020%\u0076",_gfeb );
return ;};_gfeb =SetLicenseKey (string (_bde ),_fdf );if _gfeb !=nil {_eg .Log .Error ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u006c\u006f\u0061\u0064\u0020\u006ci\u0063\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_gfeb );
return ;};};type LicenseKey struct{LicenseId string `json:"license_id"`;CustomerId string `json:"customer_id"`;CustomerName string `json:"customer_name"`;Tier string `json:"tier"`;CreatedAt _cf .Time `json:"-"`;CreatedAtInt int64 `json:"created_at"`;ExpiresAt *_cf .Time `json:"-"`;
ExpiresAtInt int64 `json:"expires_at"`;CreatedBy string `json:"created_by"`;CreatorName string `json:"creator_name"`;CreatorEmail string `json:"creator_email"`;UniPDF bool `json:"unipdf"`;UniOffice bool `json:"unioffice"`;UniHTML bool `json:"unihtml"`;
Trial bool `json:"trial"`;_dee bool ;_bda string ;};var _fcec map[string ]int ;func (_gde *LicenseKey )TypeToString ()string {if _gde ._dee {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";};if _gde .Tier ==LicenseTierUnlicensed {return "\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
};if _gde .Tier ==LicenseTierCommunity {return "\u0041\u0047PL\u0076\u0033\u0020O\u0070\u0065\u006e\u0020Sou\u0072ce\u0020\u0043\u006f\u006d\u006d\u0075\u006eit\u0079\u0020\u004c\u0069\u0063\u0065\u006es\u0065";};if _gde .Tier ==LicenseTierIndividual ||_gde .Tier =="\u0069\u006e\u0064i\u0065"{return "\u0043\u006f\u006dm\u0065\u0072\u0063\u0069a\u006c\u0020\u004c\u0069\u0063\u0065\u006es\u0065\u0020\u002d\u0020\u0049\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";
};return "\u0043\u006fm\u006d\u0065\u0072\u0063\u0069\u0061\u006c\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u002d\u0020\u0042\u0075\u0073\u0069ne\u0073\u0073";};func _aef (_cabg ,_bfec []byte )([]byte ,error ){_ccbe ,_cfge :=_fd .NewCipher (_cabg );
if _cfge !=nil {return nil ,_cfge ;};_cbga :=make ([]byte ,_fd .BlockSize +len (_bfec ));_becd :=_cbga [:_fd .BlockSize ];if _ ,_bdfe :=_ca .ReadFull (_ec .Reader ,_becd );_bdfe !=nil {return nil ,_bdfe ;};_gfea :=_cfg .NewCFBEncrypter (_ccbe ,_becd );
_gfea .XORKeyStream (_cbga [_fd .BlockSize :],_bfec );_bdd :=make ([]byte ,_efg .URLEncoding .EncodedLen (len (_cbga )));_efg .URLEncoding .Encode (_bdd ,_cbga );return _bdd ,nil ;};const _gfff ="\u0055\u004e\u0049\u0050DF\u005f\u004c\u0049\u0043\u0045\u004e\u0053\u0045\u005f\u0050\u0041\u0054\u0048";
func SetLicenseKey (content string ,customerName string )error {_bec ,_deab :=_dbb (content );if _deab !=nil {_eg .Log .Error ("\u004c\u0069c\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0065\u0072\u0072\u006f\u0072: \u0025\u0076",_deab );
return _deab ;};if !_efb .EqualFold (_bec .CustomerName ,customerName ){_eg .Log .Error ("L\u0069ce\u006es\u0065 \u0063\u006f\u0064\u0065\u0020i\u0073\u0073\u0075e\u0020\u002d\u0020\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006da\u0074\u0063\u0068, e\u0078\u0070\u0065\u0063\u0074\u0065d\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067o\u0074 \u0027\u0025\u0073\u0027",customerName ,_bec .CustomerName );
return _da .Errorf ("\u0063\u0075\u0073\u0074\u006fm\u0065\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006d\u0061t\u0063\u0068\u002c\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067\u006f\u0074\u0020\u0027\u0025\u0073'",customerName ,_bec .CustomerName );
};_deab =_bec .Validate ();if _deab !=nil {_eg .Log .Error ("\u004c\u0069\u0063\u0065\u006e\u0073e\u0020\u0063\u006f\u0064\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074i\u006f\u006e\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_deab );
return _deab ;};_gec =&_bec ;return nil ;};func Track (docKey string ,useKey string )error {return _bfb (docKey ,useKey ,false )};